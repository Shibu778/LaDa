//
//  Version: $Id$
//
/** \page secexec Executables
    
    The executables are listed without the suffix and prefix you may have added
    when compiling with autotools.
  <UL>
     <LI> \ref alloylayers
     <LI> \ref vffexe
     <LI> \ref layeredvffexe
     <LI> \ref pescanexe
     <LI> \ref layeredpescanexe
     <LI> \ref ceoptexe
     <LI> \ref alloylayersoptexe
  </UL>
   
    \section alloylayers alloylayers
    This program is meant to help in creating" " epitaxial structures for use
    with GA. It will create a full structure from the partial information
    provided in the input (such unit cell or direction/extent of epitaxial
    growth, see \ref xCrystal. ) It outputs information regarding the number
    and size of the epitaxial layers in the structure.
      \param -h, --help prints out options
      \param --structure "filename" outputs the structure in xyz, xcrysden, and
             xml formats to filename.xyz, filename.xsf, and filename.xml respectively.
      \param --direction "(a b c)" Epitaxial growth direction. By default,
                         (a,b,c) is the first column of the unit-cell. If set
                         by hand, (a, b, c) must have the correct periodicity. 
    If the following is the input file:
    \code
      <?xml version="1.0" standalone="no" ?>
      <Job>
        <MPI pools=2 />
         <Structure >
             <Cell>
                 <row x="1.5" y="0" z="0" />
                 <row x="0.5" y="1" z="0" />
                 <row x="0.0" y="0" z="1" />
             </Cell>
         </Structure>
    
         <Lattice scale="5.43">
             <row x="0.0" y="0.5" z="0.5" />
             <row x="0.5" y="0.0" z="0.5" />
             <row x="0.5" y="0.5" z="0.0" />
             <site x="0.25" y="0.25" z="0.25">
                 <atom type="Ge" />
             </site>
             <site x="0.0" y="0.0" z="0.0">
                 <atom type="Ge" />
             </site>
         </Lattice>
      </Job>
    \endcode
    and (100) the requested growth direction, then the following call has the
    correct periodicity and yield the expected 6 layers.
    \code
       alloylayers --direction "(1.5 0 0)" 
    \endcode
   
    \section vffexe vff
    Prints out the energy, the strain tensor, and the minimized structure of
    each structure in input, where the energy is minimized using vff.
      \param -h, --help prints out options
      \param -i, --input file to read input from. Defaults to "input.xml" in current directory.
   
    \section layeredvffexe layered_vff
    Prints out the energy, the strain tensor, and the minimized structure of
    each structure in input, where the energy is minimized using a "layered"
    vff. More explicitely, relaxation of the unit cell is only allowed along
    the first vector of that unit-cell. This program is intended for layered
    (epitaxial) optimizations. Note that the other vectors in the unit-cell can
    relax if they have a component along the first vector. Atoms are allowed to
    relax freely.
      \param -h, --help prints out options
      \param -i, --input file to read input from. Defaults to "input.xml" in current directory.
   
    \section pescanexe escan
    Prints out the bandgap of the input structures, after strain relaxation.
    The program works in one of two ways:
       - It tries to read GA optimized structures from within \<Results\> ...
      \</Results> tags. This allows for easy all-electron recomputations of
      optimized band-gaps.
       - If the above fails, it read the \<Structure\> tags found directly
       under \<Job\>...\</Job\>
       . 
      \param -h, --help prints out options
      \param -v, --version prints out subversion revision.
      \param -d Also computes oscillator strength between valence and conduction bands.
      \param --degeneracy Defines the number of "degenerate" VBM and CBM bands
                          for oscillator strength computations. Larger values
                          mean more band will be included.
      \param --donteval Does not do band-gap evaluations. Does vff
      relaxation and prints-out result.
   
    \section layeredpescanexe layered_escan
       Same as above for epitaxial structure. The first column of the supercell
       is expected to be the growth direction.

    \section ceoptexe ce_opt
    Optimizes cluster expansions. This is a single-objective GA.
      \param -h, --help prints out options
      \param -i, --input file to read input from. Defaults to "input.xml" in current directory.

     The input should look something like the following. (\sa input/bandgap_opt.xml)
     \code 
        <Job>
          <Lattice>
            ...
          </Lattice>
          <Structure>
            ...
          </Structure>
          <GA>
            ...
          </GA>
          <Functional type="CE">
            ...
          </Functional>
        </Job>
     \endcode
   
    \section alloylayersoptexe alloylayers_opt
     Performs optimizations within the  "alloy-layers" configuration space of
Zinc-Blend structures.  This space is defined by a growth direction and the
extent along that direction and the perpendicular to that direction. The extent
along the growth direction species the number of layers in the epitaxial
structure. The extent along the other two directions are used to model "random"
alloy layers. Smaller layers will be less random and allow fewer concentrations
(eg. if there are two atoms per layer, The concentration is x=0, x=0.25, x=0.5,
x=0.75,x=1 are the only concentrations allowed). \e The alloylayers \e program
\e can \e be \e used \e to \e characterize \e an \e epitaxial \e structure.

     This GA optimization is meant for multi-objective search, although it can
be used for a single-objective, at your own risk. The allowable physical
properties and GA operators (crossover, mutation, etc ) are listed with the
help option. 

     In theory, this search procedure should find the concentration-graded
epitaxial structure which best represents the objectives. 

      \param -h, --help prints out options
      \param -i, --input file to read input from. Defaults to "input.xml" in current directory.
     \note Can be launched in multiple processors. See \ref TagMPI for more details.

     The input should look something like the following.
     See test/alloylayers_opt/input.xml for an actual example.
     \code 
        <Job>
          <MPI pools=?/>
          <Lattice>
            ...
          </Lattice>
          <Structure>
            ...
          </Structure>
          <GA>
            <Objectives>
              <Objective value="some physical property"/>
              <Objective value="some other physical property"/>
              ...
            </Objectives>
            <Breeding>
               some breeding operators. see --help.
            </Breeding>
            <Scaling type="Pareto" > 
            <Scaling type="Niching" distance="GeneralHamming" > 
            ...
          </GA>
          <Functional type="escan">
            ...
          </Functional>
          <Functional type="vff">
            ...
          </Functional>
          <Functional type="oscillator strength" degeneracy=?? />  
              "oscillator strength" is optional. When not included, degeneracy
              (its only attribute) will take a defaul value.
        </Job>
     \endcode
    The functionals listed above are the only functionals allowed. Escan and VFF are mandatory.
      
    The example above is given for a multi-objective search. Objectives are to
    be listed as <Objective type=? value=?/> within <Objectives> ...
    </Objectives> tags. Mind your plurals and singulars. The attribute \a
    values gives the physical property to optimize for that objective, and \a type
    says how it should be optimized (maximized, minizmized, target value, etc).
    Available physical properties are listed with --help and below.
             - bandgap 
             - cbm
             - epi Stress perpendicular to the growth direction.
             - energy Elastic energy, as determined by VFF. 
             - transition Oscillator Strength between VBM and CBM.
             - vbm
             .
**/

       
   
//   \section layeredoptexe layered_opt
//    Optimizes in-plane stress as computed from vff and band-gaps as computed
//    from escan. This is a two-objective GA (first stress, second band-gap).
//    It is intended for quaternaries (should work for ternaries as well) where
//    optimized structures span the minimal epitaxial unit-cell. As such
//    structures are inputed in a special way (see below).
//     \param -h, --help prints out options
//     \param -i, --input file to read input from. Defaults to "input.xml" in current directory.
//    \note Can be launched in multiple processors. See \ref TagMPI for more details.
//
//   Structures can be either loaded from input as done everywhere else or
//   constructured. In the former case, the structure must be a minimal
//   epitaxial structure, or results are not guaranteed (not that they are in
//   any case). In the latter case the \ref TagStructure takes two attributes.
//   See test/layered_opt/input.xml for an actual example.
//   \code 
//      <Job>
//        <Lattice>
//          ...
//        </Lattice>
//        <Structure direction="1 0 0" multplicity="5"/>
//        <GA>
//          <Objective>
//            <Objective type="minimize"/> <!-- In-plane stress/>
//            <Objective type="target" target=0.3/> <!-- bandgap/>
//          </Objective>
//          ...
//        </GA>
//        <Functional type="escan">
//          ...
//        </Functional>
//        <Functional type="vff">
//          ...
//        </Functional>
//      </Job>
//   \endcode
//   The direction \f$\mathbf{d}\f$ is a string of three numbers (mind the spaces. They are
//   necessary) defining the epitaxial direction. The multiplicity \e m defines the
//   number of (epitaxial) unit-cells to use in the epitaxial direction, eg the number of layers. 
//   \f$m\mathbf{d}\f$ must be a vector of the direct lattice, in units of \a scale.
//   \warning There is not \ref TagConcentration tag here. Concentrations are
//   set by specifying a x0 attribute in the \<GA\> tag. 
//   The \<Structure\> tag also accepts the following attributes \a PI, \a
//   energy, \a scale. 
//   \warning Do not forget to set the scale attribute of either in the lattice
//   or the structure tag. Otherwise, results may be undetermined.
    

