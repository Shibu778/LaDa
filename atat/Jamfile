ATAT_CC = findsym.cc integer.cc xtalutil.cc ;

lib libatat : $(ATAT_CC) ;
#              findsym.h  integer.h  xtalutil.h 
#              array.h  arraylist.h   fixagg.h  fxvector.h 
#              linklist.h  machdep.h  misc.h  vectmac.h  ;

python-extension atat : atat.py.cc : : <library>..//boost-python ;

# A little "rule" (function) to clean up the syntax of declaring tests
# of these extension modules.
local rule run-test ( test-name : sources + )
{
    import testing ;
    testing.make-test run-pyd : $(sources) : : $(test-name) ;
}

# Declare test targets
# run-test atat_test : atat atat_test.py ;

import stage ;
import option ;
import property ;
# First, figure out all locations. Use the default if no prefix option given.
local prefix = [ option.get prefix :
    [ property.select <install-default-prefix> : $(requirements) ] ] ;
requirements = [ property.change $(requirements) : <install-default-prefix> ] ;
# Or some likely defaults if neither is given.
if ! $(prefix)
{
    if [ modules.peek : NT ] { prefix = C:\\$(name) ; }
    else if [ modules.peek : UNIX ] { prefix = /usr/local ; }        
}
local lib-locate = [ option.get libdir : $(prefix)/lib ] ;
# stage.install python : atat
#     : <location>$(lib-locate) 
#       <install-dependencies>on <install-type>LIB  ;

import package ;
package.install libs : <install-header-subdir>LaDa/atat
                     : : libatat : [ glob *.h ] ; 
# package.install pylibs :  <prefix>$(lib-locate)/python  : : atat  ;
stage.install pylibs : 
    atat 
    : <location>$(lib-locate) 
      <install-dependencies>on <install-type>LIB 
    ;
alias install : libs pylibs ;
alias install-python : pylibs ;

explicit install install-python libs pylibs ;
