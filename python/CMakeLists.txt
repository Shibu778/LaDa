set(PYLADA_HEADERS debug.hpp misc.hpp numpy_types.h std_map.hpp std_map.impl.hpp std_vector.hpp xml.hpp)

if(NOT noinstall_headers)
  install(FILES ${PYLADA_HEADERS} DESTINATION include/LaDa/python)
endif(NOT noinstall_headers)

if(pcm_functional) 
  set(do_import_pcm "import pcm")
else(pcm_functional) 
  set(do_import_pcm "# import pcm")
endif(pcm_functional) 
if(ce_functional) 
  set(do_import_ce "import ce")
else(ce_functional) 
  set(do_import_ce "# import ce")
endif(ce_functional) 
if(vasp_functional) 
  set(do_import_vasp "import vasp")
else(vasp_functional) 
  set(do_import_vasp "# import vasp")
endif(vasp_functional) 
if(escan_functional) 
  set(do_import_escan "import escan")
else(escan_functional) 
  set(do_import_escan "# import escan")
endif(escan_functional) 
if(vff_functional) 
  set(do_import_vff "import vff")
else(vff_functional) 
  set(do_import_vff "# import vff")
endif(vff_functional) 
if(separables_functional) 
  set(do_import_separables "import separables")
else(separables_functional) 
  set(do_import_separables "# import separables")
endif(separables_functional) 
if(atompot_functional) 
  set(do_import_atompot "import atompot")
else(atompot_functional) 
  set(do_import_atompot "# import atompot")
endif(atompot_functional) 
if(enum_package) 
  set(do_import_enumeration "import enumeration")
else(enum_package) 
  set(do_import_enumeration "# import enumeration")
endif(enum_package) 
if(minimizer_libs) 
  set(do_import_minimizer "import minimizer")
else(minimizer_libs) 
  set(do_import_minimizer "# import minimizer")
endif(minimizer_libs) 
configure_file (
 "${PROJECT_SOURCE_DIR}/python/__init__.in.py"
 "${PROJECT_BINARY_DIR}/python/__init__.py"
)
install(FILES ${PROJECT_BINARY_DIR}/python/__init__.py DESTINATION ${CMAKE_PYINSTALL_PREFIX}/lada)

