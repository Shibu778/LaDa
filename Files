#  Version: $Id$
#

ATAT_CC = findsym.cc integer.cc xtalutil.cc 
ATAT_H  = findsym.h  integer.h  xtalutil.h \
          array.h  arraylist.h   fixagg.h  fxvector.h \
	  linklist.h  machdep.h  misc.h  vectmac.h  


DARWIN_LIB_CC = concentration.cc debug.cc
DARWIN_LIB_H = $(addsuffix .h, $(basename $(DARWIN_LIB_CC))) \
               breeder.h evaluation.h functors.h loadsave.h \
	       operators.h statistics.h darwin.h gencount.h store.h \
	       checkpoints.h evaluator.h individual.h objective.h \
	       taboos.h gatraits.h  bitstring.h fitness.h gaoperators.h \
	       scaling.h minimizergenop.h 
DARWIN_LIB_IMPLS = darwin.impl.h  evaluation.impl.h individual.impl.h \
	           scaling.impl.h store.impl.h  fitness.impl.h taboos.impl.h \
                   objective.impl.h bitstring.impl.h gaoperators.impl.h \
                   checkpoints.impl.h minimizergenop.impl.h
DARWIN_LIB_DOC = $(DARWIN_LIB_H) $(DARWIN_LIB_IMPLS) $(DARWIN_LIB_CC) 

DARWIN_CE_CC = ce.cc single_site.cc groundstate.cc
DARWIN_CE_H  = ce.h  single_site.h  groundstate.h
DARWIN_CE_IMPLS = single_site.impl.h 
DARWIN_CE_DOC = $(DARWIN_CE_H) $(DARWIN_CE_IMPLS) $(DARWIN_CE_CC) 

DARWIN_BG_CC = bandgap_stubs.cc two_sites.cc single_site.cc vff.cc bandgap.cc 
DARWIN_BG_H  = bandgap_stubs.h  two_sites.h  single_site.h  vff.h  bandgap.h 
DARWIN_BG_IMPLS = bandgap_stubs.impl.h  two_sites.impl.h  single_site.impl.h  
DARWIN_BG_DOC = $(DARWIN_BG_H) $(DARWIN_BG_IMPLS) $(DARWIN_BG_CC) 

DARWIN_L_CC = bandgap_stubs.cc two_sites.cc single_site.cc vff.cc molecularity.cc layered.cc
DARWIN_L_H  = bandgap_stubs.h   two_sites.h single_site.h  vff.h  molecularity.h  layered.h 
DARWIN_L_IMPLS = bandgap_stubs.impl.h two_sites.impl.h single_site.impl.h molecularity.impl.h \
                 layered.impl.h 
DARWIN_L_DOC = $(DARWIN_L_H) $(DARWIN_L_IMPLS) $(DARWIN_L_CC) 

DARWIN_E_CC = emass_stubs.cc two_sites.cc single_site.cc vff.cc emass.cc layered.cc
DARWIN_E_H  = emass_stubs.h  two_sites.h  single_site.h  vff.h  emass.h  layered.h 
DARWIN_E_IMPLS = emass_stubs.impl.h  two_sites.impl.h  single_site.impl.h \
                 emass.impl.h  layered.impl.h 
DARWIN_E_DOC = $(DARWIN_E_H) $(DARWIN_E_IMPLS) $(DARWIN_E_CC) 

CRYSTAL_CC = lattice.cc structure.cc 
CRYSTAL_H  = lattice.h  structure.h  atom.h 
CRYSTAL_DOC = $(CRYSTAL_H) $(CRYSTAL_CC) 
CE_CC = cluster.cc constituent_strain.cc functional_builder.cc harmonic.cc  polynome.cc 
CE_H  = cluster.h  constituent_strain.h  functional_builder.h  harmonic.h   polynome.h  
CE_DOC = $(CE_H) $(CE_CC) 

LAPACK_F90 = dlae2.f   dlanst.f  dlapy2.f  dlarf.f   dlarft.f  dlascl.f \
	     dlasr.f   dlassq.f  dorg2l.f  dorgql.f  dorgtr.f  dsterf.f \
             dsytd2.f  dlaev2.f  dlansy.f  dlarfb.f  dlarfg.f  dlartg.f \
	     dlaset.f  dlasrt.f  dlatrd.f  dorg2r.f  dorgqr.f  dsteqr.f \
	     dsyev.f   dsytrd.f  lsame.f   xerbla.f  dgemm.f   ilaenv.f \
	     dscal.f   dlamch.f  dsyr2k.f  ieeeck.f  iparmq.f  dsymv.f  \
	     ddot.f    daxpy.f   dsyr2.f   dnrm2.f   dswap.f   dcopy.f  \
	     dgemv.f   dtrmv.f   dtrmm.f   dger.f   
LAPACK_CC = lapack.cc 
LAPACK_H  = lapack.h
LAPACK_DOC = $(LAPACK_H) $(LAPACK_CC) 

MPI_CC     = mpi_object.cc comm.cc
MPI_H      = mpi_object.h base.h macros.h comm.h 
MPI_H_IMPL = comm.impl.h
MPI_DOC    = $(MPI_H) $(MPI_CC) $(MPI_IMPL_H)

OPT_H = ndim_iterator.h minimize_base.h polynome.h frprmn_minimizer.h \
        gsl_minimizers.h types.h convex_hull.h function_base.h \
	va_minimizer.h fitness_function.h  function_functors.h monome.h traits.h \
        fuzzy.h atat.h debug.h va_function.h
OPT_F90 =  df1dim.f90  frprmn.f90  linmin.f90
OPT_DOC = $(OPT_H) $(OPT_CC) 

EMASS_CC = emass.cc
EMASS_H  = emass.h
EMASS_DOC = $(EMASS_H) $(EMASS_CC) 
PESCAN_CC = interface.cc bandgap.cc va.cc 
PESCAN_H  = interface.h  bandgap.h  va.h 
PESCAN_DOC = $(PESCAN_H) $(PESCAN_CC) 

PHYSICS_CC = physics.cc
PHYSICS_H  = physics.h
PHYSICS_DOC = $(PHYSICS_H) $(PHYSICS_CC) 

PRINT_CC = manip.cc xmg.cc stdout.cc base.cc 
PRINT_H  = manip.h  xmg.h  stdout.h  base.h  operations.h 
PRINT_DOC = $(PRINT_H) $(PRINT_CC) 

VFF_FORTRAN_CC = fortran.cc
VFF_FORTRAN_H  = fortran.h
VFF_FORTRAN_DOC = $(VFF_FORTRAN_H) $(VFF_FORTRAN_CC) 
VFF_CC = functional.cc layered.cc # pescan_perturbation.cc 
VFF_H  = functional.h  layered.h  va.h # pescan_perturbation.h 
VFF_IMPLS = va.impl.h 
VFF_DOC = $(VFF_H) $(VFF_IMPLS) $(VFF_CC) 

DOCS_H = revision.h
DOCS =  beginners  crystal  fortran  functionals  ga  \
        input  mainpage  mpi  xmltagindex gainput executables
ALL_DOCS = doxy.conf $(DOCS_H) \
           $(addprefix docsource/, $(DOCS)) \
           $(addprefix darwin/, $(DARWIN_LIB_DOC)) \
           $(addprefix darwin/, $(DARWIN_CE_DOC)) \
           $(addprefix darwin/, $(DARWIN_BG_DOC)) \
           $(addprefix darwin/, $(DARWIN_L_DOC)) \
           $(addprefix darwin/, $(DARWIN_E_DOC)) \
           $(addprefix lamarck/,$(CRYSTAL_DOC)) \
           $(addprefix lamarck/,$(CE_DOC)) \
           $(addprefix lapack/,$(LAPACK_DOC)) \
           $(addprefix mpi/,$(MPI_DOC)) \
           $(addprefix opt/,$(OPT_DOC)) \
           $(addprefix pescan_interface/,$(EMASS_DOC)) \
           $(addprefix pescan_interface/,$(PESCAN_DOC)) \
           $(addprefix physics/,$(PHYSICS_DOC)) \
           $(addprefix print/,$(PRINT_DOC)) \
           $(addprefix vff/,$(VFF_FORTRAN_DOC)) \
           $(addprefix vff/,$(VFF_DOC))

