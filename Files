math_cc = random.cc smith_normal_form.cc 
math_h  = compare_norms.h  eigen.h  fuzzy.h  lambda.impl.h  misc.h  modifiers.h \
          random.h  serialize.h  smith_normal_form.h  traits.h
math_f90 = rational_mathematics.f90
math_python_h = avogadro.hpp matrix.hpp  numpy_types.h
math_python_cc = avogadro.cc matrix.cc python.cc 

ap_cc = representation.cc functions.cc
ap_h  = bases.h  bases.impl.h  functions.h  functions.iterator.h  numeric_types.h\
        representation.h  separable.h  sum_of_separables.h
ap_doc = $(ap_h) $(ap_cc)
ap_collapse_cc = collapse.cc  fitting_set.cc  values.cc
ap_collapse_h  = collapse.h  fitting_set.h  values.h  
potentials_python_h = representation.hpp bases.hpp representation.hpp sum_of_separables.hpp \
                      collapse.hpp fitting_set.hpp values.hpp functions.hpp separable.hpp
potentials_python_cc = python.cc representation.cc bases.cc sum_of_separables.cc \
                       collapse.cc fitting_set.cc values.cc functions.cc separable.cc
ap_collapse_doc = $(ap_collapse_h) $(ap_collapse_cc)

fc_models_clj_cc = fortran.cc 
fc_models_clj_h = fortran.h wrapper.h 
models_clj_f90 = ep_com.f90 ewaldf.f90 
models_clj_cc = clj.cc ewald.cc lennard-jones.cc erfc.cc functional.cc
models_clj_h = clj.h ewald.h lennard-jones.h functional.h
models_clj_doc = $(fc_models_clj_h) $(fc_models_clj_cc) $(models_clj_h) $(models_clj_cc)
models_python_h = clj.hpp functional.hpp
models_python_cc = python.cc clj.cc functional.cc

crystal_cc = lattice.cc structure.cc confsplit.cc layerdepth.cc read_structure.cc \
             epi_structure.cc fill_structure.cc ideal_lattice.cc smith.cc \
             symmetry_operator.cc make_primitive.cc
crystal_h  = lattice.h  structure.h structure.impl.h atom.h  confsplit.h layerdepth.h \
             read_structure.h epi_structure.h fill_structure.h fourier.h read_poscar.h \
             fractional_cartesian.h ideal_lattice.h smith.h neighbors.h enumerate.h \
             symmetry_operator.h
crystal_doc = $(crystal_h) $(crystal_cc) 
crystal_python_h = structure.hpp atom.hpp lattice.hpp read_structure.hpp \
                   smith.hpp enumerate.hpp layerdepth.hpp neighbors.hpp \
                   symmetry_operator.hpp which_site.hpp 
crystal_python_cc = structure.cc atom.cc lattice.cc read_structure.cc \
                    python.cc smith.cc enumerate.cc layerdepth.cc neighbors.cc \
                    symmetry_operator.cc which_site.cc 

ce_cc     = cluster.cc harmonic.cc  polynome.cc regularization.cc fit.cc create_pairs.cc \
            create_clusters.cc mlcluster.cc mlclusters.cc
ce_h      = cluster.h  constituent_strain.h  functional_builder.h  harmonic.h \
            polynome.h regularization.h fit.h drautz_diaz_ortiz.h find_pis.h \
            create_pairs.h create_clusters.h mlcluster.h mlclusters.h
ce_impl_h = constituent_strain.impl.h  functional_builder.impl.h  harmonic.impl.h 
ce_doc = $(ce_h) $(ce_cc) 
ce_python_h = ce.hpp ce.impl.hpp clusters.hpp create_pairs.hpp find_pis.hpp create_clusters.hpp\
              mlcluster.hpp mlclusters.hpp
ce_python_cc = ce.cc python.cc clusters.cc create_pairs.cc find_pis.cc create_clusters.cc \
               mlcluster.cc mlclusters.cc

enum_cc = find_all_cells.cc  label_exchange.cc   numeric_type.cc  \
          remove_smith_equivalents.cc  transform.cc  translation.cc
enum_h = exceptions.h  find_all_cells.h  label_exchange.h numeric_type.h \
         remove_smith_equivalents.h  transform.h  translation.h
enum_doc = $(enum_h) $(enum_cc)
enum_python_h = find_all_cells.hpp label_exchange.hpp translation.hpp transform.hpp bitset.hpp
enum_python_cc = find_all_cells.cc label_exchange.cc translation.cc transform.cc \
                 bitset.cc python.cc

mpi_cc     = 
mpi_h      = mpi_object.h macros.h
mpi_doc    = $(mpi_h) $(mpi_cc)

opt_h = ndim_iterator.h minimize_base.h polynome.h types.h \
        function_base.h pow.h redirect.h va_minimizer.h \
	fitness_function.h  function_functors.h monome.h va_function.h \
        algorithms.h bpo_macros.h tuple_io.h  leave_many_out.h \
        tuple_serialize.h path.h
opt_f90 = fortran_redirect.f90
opt_cc = leave_many_out.cc path.cc
opt_python_convenience_h =  convex_hull.h errors.h convex_hull.impl.h \
                            tinyxml.h initial_path.h fortran_dirio.h 
opt_python_convenience_cc = convex_hull.cc errors.cc tinyxml.cc \
                            initial_path.cc fortran_dirio.cc 
opt_doc = $(opt_h) $(opt_cc) $(opt_python_convenience_cc) $(opt_python_convenience_h)
opt_python_cc = errortuple.cc python.cc redirect.cc
opt_python_c = errortuple.hpp convexhull.impl.hpp redirect.hpp

EMASS_CC = emass.cc
EMASS_H  = emass.h
EMASS_DOC = $(EMASS_H) $(EMASS_CC) 

physics_cc = 
physics_h  = physics.h
physics_doc = $(physics_h) $(physics_cc) 
physics_python_h  =
physics_python_cc = python.cc

python_h = xml.hpp misc.hpp std_vector.hpp std_map.hpp std_map.impl.hpp debug.hpp numpy_types.h

minimizer_h =  allsq.h  cgs.h  decoupled.h  frprmn.h  function_wrapper.h  gsl.h \
               gsl_lsq.h  gsl_mins.h  gsl_nllsq.h  gsl_simplex.h  minuit2.h \
               variant.h interpolated_gradient.h
minimizer_cc = gsl_lsq.cc gsl.cc gsl_nllsq.cc gsl_mins.cc gsl_simplex.cc frprmn.cc \
               decoupled.cc minuit2.cc cgs.cc
minimizer_f90 =  df1dim.f90  frprmn_fortran.f90  linmin.f90
minimizer_doc = $(minimizer_h) $(minimizer_cc)
minimizer_python_h = cgs.hpp minimizer.hpp interpolated_gradient.hpp function.hpp
minimizer_python_cc = python.cc cgs.cc minimizer.cc interpolated_gradient.cc

separable_cc = cefitting.cc ce.cc struct_to_confs.cc
separable_h = boolean.h cefitting.h ce.h lsq.h separable.h collapse.h \
              cecollapse.h bestof.h struct_to_confs.h
separable_impl_h = cefitting.impl.h separable.impl.h collapse.impl.h \
                   cecollapse.impl.h
separable_doc = $(separable_cc) $(separable_h) $(separable_impl_h)
separable_fxl_cc = prepare.cc
separable_fxl_h = colmappings.h sepmappings.h functional.h prepare.h collapse.h methods.h \
                   mixed.h colpolicy.h mixedfunctional.h ce_as_collapse.h
separable_fxl_impl_h = functional.impl.h collapse.impl.h methods.impl.h mixed.impl.h \
                        colpolicy.impl.h mixedfunctional.impl.h \
                        ce_as_collapse.impl.h
separable_fxl_doc = $(separable_fxl_cc) $(separable_fxl_h) $(separable_fxl_impl_h)


vff_cc = atomic_center.cc atomic_functional.cc functional.cc vff.cc layered.cc\
         initialize_centers.cc build_tree_smith.cc build_tree_sort.cc \
         build_tree_sort_dnc.cc # pescan_perturbation.cc 
vff_impl_h = va.impl.h pescan_perturbation.impl.h
vff_h  = functional.h  layered.h  va.h  pescan_perturbation.h vff.h \
         atomic_center.h atomic_functional.h $(vff_impl_h)
vff_doc = $(vff_h) $(vff_impl_h) $(vff_cc) 
vff_python_cc = vff.cc python.cc
vff_python_h = vff.hpp

docs_h = 
docs =  beginners  crystal  fortran  functionals  ga  \
        input  mainpage  mpi  xmltagindex gainput executables
SCRIPT_FILES =  
ALL_DOCS = $(top_srcdir)/doxy.conf $(top_srcdir)/$(docs_h) \
           $(addprefix $(top_srcdir)/docsource/, $(docs)) \
           $(addprefix $(top_srcdir)/atomic_potentials/,$(ap_doc)) \
           $(addprefix $(top_srcdir)/atomic_potentials/collapse/,$(ap_collapse_doc)) \
           $(addprefix $(top_srcdir)/crystal/,$(crystal_doc)) \
           $(addprefix $(top_srcdir)/ce/,$(ce_doc)) \
           $(addprefix $(top_srcdir)/enum/,$(enum_doc)) \
           $(addprefix $(top_srcdir)/mpi/,$(mpi_doc)) \
           $(addprefix $(top_srcdir)/opt/,$(opt_doc)) \
           $(addprefix $(top_srcdir)/models/,$(models_clj_doc)) \
           $(addprefix $(top_srcdir)/physics/,$(physics_doc)) \
           $(addprefix $(top_srcdir)/separable/,$(separable_doc)) \
           $(addprefix $(top_srcdir)/separable/fixedlattice/,$(separable_fxl_doc)) \
           $(addprefix $(top_srcdir)/vff/,$(vff_doc)) \
           $(addprefix $(top_srcdir)/minimizer/,$(minimizer_doc)) 

TEST_PSEUDOS = maskr  vq.atom1  vq.atom2  vq.atom3  vq.atom4  vq.atom5 \
               vq.atom6  vq.atom7  vq.atom8  vwr.pso
TEST_FILES =  input.xml  launch.pl
TEST_LAMARCK =  input.xml  

TEST_SEPARABLES_DTETRA = LDAs.dat A1-A  CH-A2B2 gamma2-AB2 L12-AB3 \
  PI0.94v1.str.-30-yz-A1B4 PI0.94v1.str.-565-A2B7 PI0.94v1.str.82794-yz-A12B4 \
  V1-AB3 Y1-A3B Z1-AB3-yz A1-B CH-A2B2-yz gamma2-AB2-xz PI0.94v1.str.30-yz-A4B1 \
  PI0.94v1.str.69736-A12B4 PI0.94v1.str.88807-A8B8 V2-A2B2     Y1-A3B-yz Z2-A2B2 \
  alpha1-A2B D022-A3B PI0.94v1.str.313-A6B2 PI0.94v1.str.-69736-yz-A4B12 \
  PI0.94v1.str.88807-xz-A8B8 V2-A2B2-yz  Y1-AB3 Z2-A2B2-yz alpha2-AB2 D022-A3B-yz \
  input.xml PI0.94v1.str.1132-yz-A9B1  PI0.94v1.str.313-yz-A6B2 \
  PI0.94v1.str.73983-yz-A8B8 PI0.94v1.str.-8882-A4B9 W1-A3B Y1-AB3-yz \
  alpha2-AB2-yz  D022-AB3 jtypes PI0.94v1.str.-29443-A7B8 PI0.94v1.str.31-yz-A3B2 \
  PI0.94v1.str.74095-A8B8 PI0.94v1.str.88905-A8B8 W1-A3B-yz Y2-A2B2 beta1-A2B \
  D022-AB3-yz L1_0-AB PI0.94v1.str.29443-A8B7 PI0.94v1.str.359-yz-A4B4 \
  PI0.94v1.str.74095-yz-A8B8 PIs2thru8 W1-AB3 Y2-A2B2-yz beta1-A2B-yz L1_0-AB-yz \
  PI0.94v1.str.-298-yz-A1B7  PI0.94v1.str.-360-yz-A1B7 PI0.94v1.str.74260-A8B8 \
  readpi.py W1-AB3-yz Z1-A3B beta2-AB2 gamma1-A2B L1_1-AB \
  PI0.94v1.str.298-yz-A7B1 PI0.94v1.str.-4719-yz-A4B8 PI0.94v1.str.74260-yz-A8B8 \
  W2-A2B2 Z1-A3B-yz beta2-AB2-yz gamma1-A2B-xz L12-A3B PI0.94v1.str.-30-A1B4 \
  PI0.94v1.str.4719-yz-A8B4 PI0.94v1.str.-82794-A4B12 V1-A3B W2-A2B2-yz  Z1-AB3
TEST_SEPARABLES_DCUBIC = LDAs.dat \
                         A_1-AB   C11b-AB2       L6_0-AB3 \
                         A2-A     D03-A3B \
                         A2-B     D03-AB3        PIs2thru8.3B5.4B4.5B3.6B3  \
                         B11-AB   input.xml      PIs.3B5.4B4.5B3.6B3.126-A6B\
                         B2-AB            PIs.3B5.4B4.5B3.6B3.24-A4B \
                         B32-AB   PIs.3B5.4B4.5B3.6B3.24-AB4 \
                         C11b-A2B L6_0-A3B       PIs.3B5.4B4.5B3.6B3.27-A4B \
                         PIs.3B5.4B4.5B3.6B3.27-AB4    PIs.bcc.own.109-A4B3   \
                         PIs.3B5.4B4.5B3.6B3.288-A7B   PIs.bcc.own.12305-A9B5 \
                         PIs.3B5.4B4.5B3.6B3.54726-A7B PIs.bcc.own.128-A5B2   \
                         PIs.3B5.4B4.5B3.6B3.7651-A4B9 PIs.bcc.own.133-A3B4   \
                         PIs.bcc.own.102-A6B           PIs.bcc.own.133-A4B3   \
                         PIs.bcc.own.106-A5B2          PIs.bcc.own.247-A7B    \
                         PIs.bcc.own.109-A3B4          PIs.bcc.own.247-AB7    \
                         PIs.bcc.own.254-A5B3  PIs.bcc.own.51204-A3B  \
                         PIs.bcc.own.26-A2B3   PIs.bcc.own.51204-AB3  \
                         PIs.bcc.own.26-A3B2   PIs.bcc.own.5386-A10B2 \
                         PIs.bcc.own.29-A4B    PIs.bcc.own.90757-A3B  \
                         PIs.bcc.own.31-A3B2   PIs.bcc.own.980-A3B2   \
                         PIs.bcc.own.511-A8B   PIs.step_3.89781-A3B   \
                         PIs.bcc.own.511-AB8   PIs.step_3.89781-AB3   \
                         PIs.step_3.89843-AB  SL_110_A3B-AB3\
                         SL_100_A3B-A3B       SL_111_A2B-A2B\
                         SL_100_A3B-AB3       SL_111_A2B-AB2\
                         SL_110_A2B2-AB       SL_310_A2B2-AB\
                         SL_110_A2B-A2B       SL_310_A3B-A3B\
                         SL_110_A2B-AB2       SL_310_A3B-AB3\
                         SL_110_A3B-A3B
TEST_VFF = launch.pl  launch.sh  quaternary.xml  ternary.xml
TEST_VFF_NANOPSE = position.GaSb  scanparam.GaSb  vff.in  vffparam.GaSb
TEST_MODELS = ep.input POSCAR_0 models.py
ENVIRONMENT_FILES = env

EXTRA_FILES =  $(addprefix docsource/, $(docs)) \
               $(addprefix scripts/, $(SCRIPT_FILES)) \
               $(addprefix test/pseudos/, $(TEST_PSEUDOS)) \
               $(addprefix test/bandgap/, $(TEST_FILES)) \
               $(addprefix test/bandgap_opt/, $(TEST_FILES)) \
               $(addprefix test/ce_opt/, $(TEST_FILES)) \
               $(addprefix test/lamarck/, $(TEST_LAMARCK)) \
               $(addprefix test/separables/dcubic/, $(TEST_SEPARABLES_DCUBIC)) \
               $(addprefix test/separables/dcubic/, $(TEST_SEPARABLES_DCUBIC)) \
               $(addprefix test/layered_opt/, $(TEST_FILES)) \
               $(addprefix test/vff/nanopse/, $(TEST_VFF_NANOPSE)) \
               $(addprefix test/models/, $(TEST_MODELS)) \
               $(addprefix pkgconfig/, $(ENVIRONMENT_FILES)) 

$(top_builddir)/crystal/libcrystal.la: $(addprefix $(top_srcdir)/crystal/, $(crystal_h) )\
                                       $(addprefix $(top_srcdir)/crystal/, $(crystal_cc) ) 
	@cd $(top_builddir)/crystal; $(MAKE) libcrystal.la

$(top_builddir)/physics/libphysics.la: $(addprefix $(top_srcdir)/physics/, $(physics_h) )\
                                       $(addprefix $(top_srcdir)/physics/, $(physics_cc) ) 
	@cd $(top_builddir)/physics; $(MAKE) libphysics.la

$(top_builddir)/math/libmath.la: $(addprefix $(top_srcdir)/math/, $(math_h) )\
                                 $(addprefix $(top_srcdir)/math/, $(math_cc) ) 
	@cd $(top_builddir)/math; $(MAKE) libmath.la

$(top_builddir)/mpi/libmpiobject.la: $(addprefix $(top_srcdir)/mpi/, $(mpi_h) )\
                                     $(addprefix $(top_srcdir)/mpi/, $(mpi_cc) ) 
	@cd $(top_builddir)/mpi; $(MAKE) libmpiobject.la

$(top_builddir)/opt/libopt.la: $(addprefix $(top_srcdir)/opt/, $(opt_h) )\
                               $(addprefix $(top_srcdir)/opt/, $(opt_cc) ) 
	@cd $(top_builddir)/opt; $(MAKE) libopt.la
		
$(top_builddir)/python/libpython_lada.la: $(addprefix $(top_srcdir)/python/, $(python_h) )\
                                          $(addprefix $(top_srcdir)/python/, $(python_cc) ) 
	@cd $(top_builddir)/python; $(MAKE) libpython_lada.la

$(top_builddir)/opt/libpythonconvenience.la: \
     $(addprefix $(top_srcdir)/opt/, $(opt_python_convenience_h) )\
     $(addprefix $(top_srcdir)/opt/, $(opt_python_convenience_cc) ) 
	@cd $(top_builddir)/opt; $(MAKE) libpythonconvenience.la
		
$(top_builddir)/ce/libce.la: $(addprefix $(top_srcdir)/ce/, $(ce_h) )\
                             $(addprefix $(top_srcdir)/ce/, $(ce_impl_h) ) \
                             $(addprefix $(top_srcdir)/ce/, $(ce_cc) ) 
	@cd $(top_builddir)/ce; $(MAKE) libce.la
		
$(top_builddir)/vff/libvff.la: $(addprefix $(top_srcdir)/vff/, $(vff_h) )\
                               $(addprefix $(top_srcdir)/vff/, $(vff_impl_h) )\
                               $(addprefix $(top_srcdir)/vff/, $(vff_cc) ) 
	@cd $(top_builddir)/vff; $(MAKE) libvff.la
		
$(top_builddir)/minimizer/libminimizer.la: $(addprefix $(top_srcdir)/minimizer/, $(minimizer_h) )\
                                           $(addprefix $(top_srcdir)/minimizer/, $(minimizer_cc) ) 
	@cd $(top_builddir)/minimizer; $(MAKE) libminimizer.la
		
		
$(top_builddir)/models/libmodels.la: $(addprefix $(top_srcdir)/models/, $(models_clj_h) )\
                                     $(addprefix $(top_srcdir)/models/, $(models_clj_cc) ) \
                                     $(addprefix $(top_srcdir)/models/, $(models_clj_f90) ) 
	@cd $(top_builddir)/models; $(MAKE) libmodels.la

$(top_builddir)/atomic_potentials/libpotentials.la: \
            $(addprefix $(top_srcdir)/atomic_potentials/, $(ap_h) )\
            $(addprefix $(top_srcdir)/atomic_potentials/, $(ap_cc) ) 
	@cd $(top_builddir)/atomic_potentials; $(MAKE) libpotentials.la

$(top_builddir)/separable/libseparable.la: \
    $(addprefix $(top_srcdir)/separable/, $(separable_h) )\
    $(addprefix $(top_srcdir)/separable/, $(separable_impl_h) )\
    $(addprefix $(top_srcdir)/separable/, $(separable_cc) ) 
	@cd $(top_builddir)/separable; $(MAKE) libseparable.la

$(top_builddir)/enum/libenum.la: \
    $(addprefix $(top_srcdir)/enum/, $(enum_h) ) \
    $(addprefix $(top_srcdir)/enum/, $(enum_cc) )
	@cd $(top_builddir)/enum; $(MAKE) libenum.la
