#
#  Version: $Id$
#

atat_cc = findsym.cc integer.cc xtalutil.cc 
atat_h  = findsym.h  integer.h  xtalutil.h lambda.impl.h \
          array.h  arraylist.h   fixagg.h  fxvector.h \
	  linklist.h  machdep.h  misc.h  vectmac.h serialize.h
atat_python_h = atat.impl.hpp atatintrospection.hpp atatoperators.hpp
atat_python_cc = atat.cc 

ap_cc = representation.cc
ap_h  = bases.h  bases.impl.h  functions.h  functions.iterator.h  numeric_types.h\
        representation.h  separable.h  sum_of_separables.h
ap_doc = $(ap_h) $(ap_cc)
ap_collapse_cc = collapse.cc  fitting_set.cc  values.cc  
ap_collapse_h  = collapse.h  fitting_set.h  values.h  
potentials_python_h = representation.hpp bases.hpp representation.hpp sum_of_separables.hpp \
                      collapse.hpp fitting_set.hpp values.hpp
potentials_python_cc = python.cc representation.cc bases.cc sum_of_separables.cc \
                       collapse.cc fitting_set.cc values.cc
ap_collapse_doc = $(ap_collapse_h) $(ap_collapse_cc)

fc_models_clj_cc = fortran.cc 
fc_models_clj_h = fortran.h wrapper.h 
models_clj_f90 = ep_com.f90 ewaldf.f90 
models_clj_cc = clj.cc ewald.cc lennard-jones.cc erfc.cc functional.cc
models_clj_h = clj.h ewald.h lennard-jones.h functional.h
models_clj_doc = $(fc_models_clj_h) $(fc_models_clj_cc) $(models_clj_h) $(models_clj_cc)
models_python_h = clj.hpp functional.hpp
models_python_cc = python.cc clj.cc functional.cc

DARWIN_GRAPH_CC = graph/graph.cc
DARWIN_GRAPH_IMPL_H = graph/breeders.impl.h graph/comm.impl.h graph/evaluation.impl.h \
                      graph/evaluator.impl.h graph/graph.impl.h graph/objective.impl.h
DARWIN_GRAPH_H = graph/breeders.h graph/comm.h graph/evaluation.h \
                 graph/evaluator.h graph/graph.h graph/history.h \
                 graph/objective.h graph/store.h  graph/taboo.h $(DARWIN_GRAPH_IMPL_H)

DARWIN_LIB_CC = concentration.cc debug.cc topology.cc \
                init_outputfiles.cc
 
DARWIN_LIB_IMPL_H = darwin.impl.h  evaluation.impl.h individual.impl.h \
	            scaling.impl.h store.impl.h  fitness.impl.h taboos.impl.h \
                    objective.impl.h bitstring.impl.h gaoperators.impl.h \
                    checkpoints.impl.h minimizergenop.impl.h topology.impl.h 
DARWIN_LIB_H = concentration.h debug.h  init_outputfiles.h \
               breeder.h evaluation.h functors.h loadsave.h \
	       operators.h statistics.h darwin.h gencount.h store.h \
	       checkpoints.h evaluator.h individual.h objective.h \
	       taboos.h gatraits.h  bitstring.h fitness.h gaoperators.h \
	       scaling.h minimizergenop.h topology.h \
               assign_callbacks.h print_callbacks.h static_translate.h \
               call_init.h $(DARWIN_LIB_IMPL_H)

DARWIN_OP_CC = operators/container.cc 
DARWIN_OP_IMPL_H = operators/factory.impl.h 
DARWIN_OP_H =  operators/callback.h          operators/eogenop_adapter.h \
               operators/make_populator.h    operators/populate.h \
               operators/xmlfactory.h        operators/container.h \
               operators/factory.h           operators/minimizer.h \
               operators/populator_functor.h operators/discriminate.h \
               operators/factory.impl.h      operators/periodic.h \
               operators/taboo.h

DARWIN_CKP_CC = checkpoints/save_every.cc
DARWIN_CKP_H = checkpoints/apply2best.h      checkpoints/checkpoint.h \
               checkpoints/filename.h        checkpoints/print_iteration.h \
               checkpoints/stop_onfile.h     checkpoints/xmlfactory.h \
               checkpoints/apply2stored.h    checkpoints/dummy.h \
               checkpoints/maxeval.h         checkpoints/print_populations.h \
               checkpoints/true_census.h     checkpoints/xyzanim.h \
               checkpoints/average_fitness.h checkpoints/every.h \
               checkpoints/maxgen.h          checkpoints/save_every.h \
               checkpoints/xcrysdenanim.h

DARWIN_TABOOS_H = taboos/container.h  taboos/history.h  taboos/populations.h

DARWIN_BITSTRING_H = bitstring/crossover.h  bitstring/mutation.h \
                     bitstring/object.h  bitstring/random.h  bitstring/translate.h

DARWIN_CE_CC = ce.cc single_site.cc groundstates/groundstate.cc 
DARWIN_CE_IMPL_H = single_site.impl.h 
DARWIN_CE_H  = ce.h  single_site.h \
               groundstates/assign.h           groundstates/evaluator_base.impl.h \
               groundstates/groundstate.h      groundstates/main.extras.h \
               groundstates/populate_factory.h groundstates/evaluator_base.h \
               groundstates/evaluator.h        groundstates/krossover.h \
               groundstates/object.h           groundstates/translate.h \
               $(DARWIN_CE_IMPL_H)

DARWIN_CE_DOC = $(DARWIN_CE_H) $(DARWIN_CE_CC) 

DARWIN_BG_CC = bandgap_stubs.cc two_sites.cc single_site.cc vff.cc bandgap.cc 
DARWIN_BG_IMPL_H = two_sites.impl.h  single_site.impl.h  bandgap_stubs.impl.h \
                   alloylayers/evaluator.impl.h   \
                   bandgap_stubs.impl.h 
DARWIN_BG_H  = bandgap_stubs.h  two_sites.h  single_site.h  vff.h  bandgap.h \
               alloylayers/evaluator.h alloylayers/main.extras.h \
               alloylayers/object.h alloylayers/operators.h \
               alloylayers/policies.h effective_mass.h $(DARWIN_BG_IMPL_H)
DARWIN_BG_DOC = $(DARWIN_BG_H) $(DARWIN_BG_CC) $(DARWIN_GRAPH_H) $(DARWIN_GRAPH_CC)

LIB_ALLOYLAYERS_CC = single_site.cc bandgap_stubs.cc vff.cc electric_dipole.cc alloylayers/concentration.cc
LIB_ALLOYLAYERS_IMPL_H  = alloylayers/evaluator.impl.h \
                          alloylayers/factory.hpp bandgap_stubs.impl.h two_sites.impl.h
LIB_ALLOYLAYERS_H  = alloylayers/evaluator.h alloylayers/object.h \
                     alloylayers/policies.h alloylayers/operators.h \
                     alloylayers/main.extras.h bandgap_stubs.h \
                     vff.h electric_dipole.h two_sites.h alloylayers/concentration.h \
                     alloylayers/mutation.h $(LIB_ALLOYLAYERS_IMPL_H) # electric_dipole.h 

DARWIN_LIB_DOC = $(DARWIN_LIB_H) $(DARWIN_LIB_CC) \
                 $(DARWIN_OP_H) $(DARWIN_OP_CC) \
                 $(DARWIN_CKP_H) $(DARWIN_CKP_CC) \
                 $(DARWIN_TABOOS_H) $(DARWIN_BITSTRING_H) \
                 $(LIB_ALLOYLAYERS_H) $(LIB_ALLOYLAYERS_CC) 

DARWIN_L_CC = bandgap_stubs.cc two_sites.cc single_site.cc vff.cc molecularity.cc layered.impl.h
DARWIN_L_IMPL_H = two_sites.impl.h single_site.impl.h molecularity.impl.h \
                  layered.impl.h 
DARWIN_L_H  = bandgap_stubs.h   two_sites.h single_site.h  vff.h  molecularity.h  layered.h \
              $(DARWIN_L_IMPL_H)
DARWIN_L_DOC = $(DARWIN_L_H) $(DARWIN_L_CC) 

DARWIN_E_CC = emass_stubs.cc two_sites.cc single_site.cc vff.cc emass.cc layered.impl.h
DARWIN_E_IMPL_H = emass_stubs.impl.h  two_sites.impl.h  single_site.impl.h \
                  emass.impl.h  layered.impl.h 
DARWIN_E_H  = emass_stubs.h  two_sites.h  single_site.h  vff.h  emass.h  layered.h \
              $(DARWIN_E_IMPL_H)
DARWIN_E_DOC = $(DARWIN_E_H) $(DARWIN_E_CC) 

crystal_cc = lattice.cc structure.cc confsplit.cc layerdepth.cc read_structure.cc \
             epi_structure.cc fill_structure.cc ideal_lattice.cc smith.cc 
crystal_h  = lattice.h  structure.h structure.impl.h atom.h  confsplit.h layerdepth.h \
             read_structure.h epi_structure.h fill_structure.h fourier.h read_poscar.h \
             fractional_cartesian.h ideal_lattice.h smith.h neighbors.h enumerate.h
crystal_doc = $(crystal_h) $(crystal_cc) 
crystal_python_h = structure.hpp atom.hpp lattice.hpp read_structure.hpp \
                   smith.hpp enumerate.hpp layerdepth.hpp neighbors.hpp
crystal_python_cc = structure.cc atom.cc lattice.cc read_structure.cc \
                    python.cc smith.cc enumerate.cc layerdepth.cc neighbors.cc

ce_cc     = cluster.cc harmonic.cc  polynome.cc regularization.cc fit.cc
ce_h      = cluster.h  constituent_strain.h  functional_builder.h  harmonic.h \
            polynome.h regularization.h fit.h drautz_diaz_ortiz.h
ce_impl_h = constituent_strain.impl.h  functional_builder.impl.h  harmonic.impl.h \
            cluster.impl.h fit.impl.h
ce_doc = $(ce_h) $(ce_cc) 
ce_python_h = ce.hpp ce.impl.hpp
ce_python_cc = ce.cc python.cc

LAPACK_F90 = dlae2.f   dlanst.f  dlapy2.f  dlarf.f   dlarft.f  dlascl.f \
	     dlasr.f   dlassq.f  dorg2l.f  dorgql.f  dorgtr.f  dsterf.f \
             dsytd2.f  dlaev2.f  dlansy.f  dlarfb.f  dlarfg.f  dlartg.f \
	     dlaset.f  dlasrt.f  dlatrd.f  dorg2r.f  dorgqr.f  dsteqr.f \
	     dsyev.f   dsytrd.f  lsame.f   xerbla.f  dgemm.f   ilaenv.f \
	     dscal.f   dlamch.f  dsyr2k.f  ieeeck.f  iparmq.f  dsymv.f  \
	     ddot.f    daxpy.f   dsyr2.f   dnrm2.f   dswap.f   dcopy.f  \
	     dgemv.f   dtrmv.f   dtrmm.f   dger.f   
LAPACK_CC = lapack.cc 
LAPACK_H  = lapack.h
LAPACK_DOC = $(LAPACK_H) $(LAPACK_CC) 

mpi_cc     = 
mpi_h      = mpi_object.h macros.h
mpi_doc    = $(mpi_h) $(mpi_cc)

opt_h = ndim_iterator.h minimize_base.h polynome.h \
        types.h function_base.h \
	va_minimizer.h fitness_function.h  function_functors.h monome.h traits.h \
        fuzzy.h atat.h debug.h va_function.h random.h algorithms.h \
        bpo_macros.h modifiers.h tuple_io.h  leave_many_out.h 
opt_cc = random.cc leave_many_out.cc 
opt_python_convenience_h =  convex_hull.h errors.h convex_hull.impl.h \
                            tinyxml.h initial_path.h fortran_dirio.h smith_normal_form.h
opt_python_convenience_cc = convex_hull.cc errors.cc tinyxml.cc \
                            initial_path.cc fortran_dirio.cc smith_normal_form.cc
opt_doc = $(opt_h) $(opt_cc) $(opt_python_convenience_cc) $(opt_python_convenience_h)
opt_python_cc = errortuple.cc python.cc
opt_python_c = errortuple.hpp convexhull.impl.hpp
opt_f90 = rational_mathematics.f90

FACTORY_CC =
FACTORY_H = chain_connect_attribute.h  chainconnects.h factory.h \
            fusedfactory.h  xmlfactory.h xmlkey.h chain_connect_node.h \
            chain_connect_value.h  functiontype.h  visit_xml.h xmlfusedfactory.h

FACTORY_DOC = $(FACTORY_CC) $(FACTORY_H)

EMASS_CC = emass.cc
EMASS_H  = emass.h
EMASS_DOC = $(EMASS_H) $(EMASS_CC) 
PESCAN_F90 = momentum.f90 fortran.f90 
PESCAN_CC = interface.cc bandgap.cc dipole_elements.cc emass.cc
PESCAN_H  = interface.h  bandgap.h  va.h dipole_elements.h emass.h
PESCAN_IMPL_H  = interface.localclasses.h va.impl.h
PESCAN_DOC = $(PESCAN_H) $(PESCAN_CC) $(PESCAN_F90) $(PESCAN_IMPL_H)
PESCAN_PYTHON_CC = escan.cc bandgap.cc python.cc emass.cc
PESCAN_PYTHON_H = escan.hpp bandgap.hpp emass.hpp

physics_cc = physics.cc
physics_h  = physics.h
physics_doc = $(physics_h) $(physics_cc) 
physics_python_h  =
physics_python_cc = python.cc

print_cc = manip.cc xmg.cc stdout.cc base.cc columns.cc
print_h  = manip.h  xmg.h  stdout.h  base.h  operations.h columns.h
print_doc = $(print_h) $(print_cc) 

python_h = xml.hpp misc.hpp std_vector.hpp std_map.hpp std_map.impl.hpp debug.hpp

MINIMIZER_H =  allsq.h  cgs.h  decoupled.h  frprmn.h  function_wrapper.h  gsl.h \
               gsl_lsq.h  gsl_mins.h  gsl_nllsq.h  gsl_simplex.h  minuit2.h \
               variant.h interpolated_gradient.h
MINIMIZER_CC = gsl_lsq.cc gsl.cc gsl_nllsq.cc gsl_mins.cc gsl_simplex.cc frprmn.cc \
               decoupled.cc minuit2.cc cgs.cc
MINIMIZER_F90 =  df1dim.f90  frprmn_fortran.f90  linmin.f90
MINIMIZER_DOC = $(MINIMIZER_H) $(MINIMIZER_CC)
MINIMIZER_PYTHON_H = cgs.hpp minimizer.hpp interpolated_gradient.hpp function.hpp
MINIMIZER_PYTHON_CC = python.cc cgs.cc minimizer.cc interpolated_gradient.cc

SEPARABLE_CC = cefitting.cc ce.cc struct_to_confs.cc
SEPARABLE_H = boolean.h cefitting.h ce.h lsq.h separable.h collapse.h \
              cecollapse.h bestof.h struct_to_confs.h
SEPARABLE_IMPL_H = cefitting.impl.h separable.impl.h collapse.impl.h \
                   cecollapse.impl.h
SEPARABLE_DOC = $(SEPARABLE_CC) $(SEPARABLE_H) $(SEPARABLE_IMPL_H)
SEPARABLES_FXL_CC = prepare.cc
SEPARABLES_FXL_H = colmappings.h sepmappings.h functional.h prepare.h collapse.h methods.h \
                   mixed.h colpolicy.h mixedfunctional.h ce_as_collapse.h
SEPARABLES_FXL_IMPL_H = functional.impl.h collapse.impl.h methods.impl.h mixed.impl.h \
                        colpolicy.impl.h mixedfunctional.impl.h \
                        ce_as_collapse.impl.h
SEPARABLES_DOC = $(SEPARABLES_FXL_CC) $(SEPARABLES_FXL_H) $(SEPARABLES_FXL_IMPL_H)


VFF_FORTRAN_CC = fortran.cc
VFF_FORTRAN_H  = fortran.h
VFF_FORTRAN_DOC = $(VFF_FORTRAN_H) $(VFF_FORTRAN_CC) 
VFF_CC = atomic_center.cc atomic_functional.cc functional.cc vff.cc layered.cc\
         initialize_centers.cc build_tree_smith.cc build_tree_sort.cc \
         build_tree_sort_dnc.cc # pescan_perturbation.cc 
VFF_IMPL_H = va.impl.h pescan_perturbation.impl.h
VFF_H  = functional.h  layered.h  va.h  pescan_perturbation.h vff.h \
         atomic_center.h atomic_functional.h $(VFF_IMPL_H)
VFF_DOC = $(VFF_H) $(VFF_IMPLS) $(VFF_CC) 
VFF_PYTHON_CC = vff.cc python.cc
VFF_PYTHON_H = vff.hpp

DOCS_H = revision.h
DOCS =  beginners  crystal  fortran  functionals  ga  \
        input  mainpage  mpi  xmltagindex gainput executables
SCRIPT_FILES = atat.pl  CE_to_ATAT_MC.pl  convert_from_atat.pl  escan_to_xml.pl\
               input_template.xml  max_revision.pl  nxnxn.pl  send_all.pl

ALL_DOCS = $(top_srcdir)/doxy.conf $(top_srcdir)/$(DOCS_H) \
           $(addprefix $(top_srcdir)/docsource/, $(DOCS)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_LIB_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_CE_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_BG_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_L_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_E_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_ALLOYLAYERS_DOC)) \
           $(addprefix $(top_srcdir)/atomic_potentials/,$(ap_doc)) \
           $(addprefix $(top_srcdir)/atomic_potentials/collapse,$(ap_collapse_doc)) \
           $(addprefix $(top_srcdir)/crystal/,$(crystal_doc)) \
           $(addprefix $(top_srcdir)/ce/,$(ce_doc)) \
           $(addprefix $(top_srcdir)/lapack/,$(LAPACK_DOC)) \
           $(addprefix $(top_srcdir)/mpi/,$(mpi_doc)) \
           $(addprefix $(top_srcdir)/opt/,$(opt_doc)) \
           $(addprefix $(top_srcdir)/models/,$(models_clj_doc)) \
           $(addprefix $(top_srcdir)/pescan_interface/,$(EMASS_DOC)) \
           $(addprefix $(top_srcdir)/pescan_interface/,$(PESCAN_DOC)) \
           $(addprefix $(top_srcdir)/physics/,$(physics_doc)) \
           $(addprefix $(top_srcdir)/print/,$(print_doc)) \
           $(addprefix $(top_srcdir)/separable/,$(SEPARABLE_DOC)) \
           $(addprefix $(top_srcdir)/separable/fixedlattice/,$(SEPARABLES_DOC)) \
           $(addprefix $(top_srcdir)/vff/,$(VFF_FORTRAN_DOC)) \
           $(addprefix $(top_srcdir)/vff/,$(VFF_DOC)) \
           $(addprefix $(top_srcdir)/factory/,$(FACTORY_DOC)) \
           $(addprefix $(top_srcdir)/minimizer/,$(MINIMIZER_DOC)) 

TEST_PSEUDOS = maskr  vq.atom1  vq.atom2  vq.atom3  vq.atom4  vq.atom5 \
               vq.atom6  vq.atom7  vq.atom8  vwr.pso
TEST_FILES =  input.xml  launch.pl
TEST_LAMARCK =  input.xml  

TEST_SEPARABLES_DTETRA = LDAs.dat A1-A  CH-A2B2 gamma2-AB2 L12-AB3 \
  PI0.94v1.str.-30-yz-A1B4 PI0.94v1.str.-565-A2B7 PI0.94v1.str.82794-yz-A12B4 \
  V1-AB3 Y1-A3B Z1-AB3-yz A1-B CH-A2B2-yz gamma2-AB2-xz PI0.94v1.str.30-yz-A4B1 \
  PI0.94v1.str.69736-A12B4 PI0.94v1.str.88807-A8B8 V2-A2B2     Y1-A3B-yz Z2-A2B2 \
  alpha1-A2B D022-A3B PI0.94v1.str.313-A6B2 PI0.94v1.str.-69736-yz-A4B12 \
  PI0.94v1.str.88807-xz-A8B8 V2-A2B2-yz  Y1-AB3 Z2-A2B2-yz alpha2-AB2 D022-A3B-yz \
  input.xml PI0.94v1.str.1132-yz-A9B1  PI0.94v1.str.313-yz-A6B2 \
  PI0.94v1.str.73983-yz-A8B8 PI0.94v1.str.-8882-A4B9 W1-A3B Y1-AB3-yz \
  alpha2-AB2-yz  D022-AB3 jtypes PI0.94v1.str.-29443-A7B8 PI0.94v1.str.31-yz-A3B2 \
  PI0.94v1.str.74095-A8B8 PI0.94v1.str.88905-A8B8 W1-A3B-yz Y2-A2B2 beta1-A2B \
  D022-AB3-yz L1_0-AB PI0.94v1.str.29443-A8B7 PI0.94v1.str.359-yz-A4B4 \
  PI0.94v1.str.74095-yz-A8B8 PIs2thru8 W1-AB3 Y2-A2B2-yz beta1-A2B-yz L1_0-AB-yz \
  PI0.94v1.str.-298-yz-A1B7  PI0.94v1.str.-360-yz-A1B7 PI0.94v1.str.74260-A8B8 \
  readpi.py W1-AB3-yz Z1-A3B beta2-AB2 gamma1-A2B L1_1-AB \
  PI0.94v1.str.298-yz-A7B1 PI0.94v1.str.-4719-yz-A4B8 PI0.94v1.str.74260-yz-A8B8 \
  W2-A2B2 Z1-A3B-yz beta2-AB2-yz gamma1-A2B-xz L12-A3B PI0.94v1.str.-30-A1B4 \
  PI0.94v1.str.4719-yz-A8B4 PI0.94v1.str.-82794-A4B12 V1-A3B W2-A2B2-yz  Z1-AB3
TEST_SEPARABLES_DCUBIC = LDAs.dat \
                         A_1-AB   C11b-AB2       L6_0-AB3 \
                         A2-A     D03-A3B \
                         A2-B     D03-AB3        PIs2thru8.3B5.4B4.5B3.6B3  \
                         B11-AB   input.xml      PIs.3B5.4B4.5B3.6B3.126-A6B\
                         B2-AB            PIs.3B5.4B4.5B3.6B3.24-A4B \
                         B32-AB   PIs.3B5.4B4.5B3.6B3.24-AB4 \
                         C11b-A2B L6_0-A3B       PIs.3B5.4B4.5B3.6B3.27-A4B \
                         PIs.3B5.4B4.5B3.6B3.27-AB4    PIs.bcc.own.109-A4B3   \
                         PIs.3B5.4B4.5B3.6B3.288-A7B   PIs.bcc.own.12305-A9B5 \
                         PIs.3B5.4B4.5B3.6B3.54726-A7B PIs.bcc.own.128-A5B2   \
                         PIs.3B5.4B4.5B3.6B3.7651-A4B9 PIs.bcc.own.133-A3B4   \
                         PIs.bcc.own.102-A6B           PIs.bcc.own.133-A4B3   \
                         PIs.bcc.own.106-A5B2          PIs.bcc.own.247-A7B    \
                         PIs.bcc.own.109-A3B4          PIs.bcc.own.247-AB7    \
                         PIs.bcc.own.254-A5B3  PIs.bcc.own.51204-A3B  \
                         PIs.bcc.own.26-A2B3   PIs.bcc.own.51204-AB3  \
                         PIs.bcc.own.26-A3B2   PIs.bcc.own.5386-A10B2 \
                         PIs.bcc.own.29-A4B    PIs.bcc.own.90757-A3B  \
                         PIs.bcc.own.31-A3B2   PIs.bcc.own.980-A3B2   \
                         PIs.bcc.own.511-A8B   PIs.step_3.89781-A3B   \
                         PIs.bcc.own.511-AB8   PIs.step_3.89781-AB3   \
                         PIs.step_3.89843-AB  SL_110_A3B-AB3\
                         SL_100_A3B-A3B       SL_111_A2B-A2B\
                         SL_100_A3B-AB3       SL_111_A2B-AB2\
                         SL_110_A2B2-AB       SL_310_A2B2-AB\
                         SL_110_A2B-A2B       SL_310_A3B-A3B\
                         SL_110_A2B-AB2       SL_310_A3B-AB3\
                         SL_110_A3B-A3B
TEST_VFF = launch.pl  launch.sh  quaternary.xml  ternary.xml
TEST_VFF_NANOPSE = position.GaSb  scanparam.GaSb  vff.in  vffparam.GaSb
TEST_MODELS = ep.input POSCAR_0 models.py
ENVIRONMENT_FILES = env

EXTRA_FILES =  $(addprefix docsource/, $(DOCS)) \
               $(addprefix scripts/, $(SCRIPT_FILES)) \
               $(addprefix test/pseudos/, $(TEST_PSEUDOS)) \
               $(addprefix test/bandgap/, $(TEST_FILES)) \
               $(addprefix test/bandgap_opt/, $(TEST_FILES)) \
               $(addprefix test/ce_opt/, $(TEST_FILES)) \
               $(addprefix test/lamarck/, $(TEST_LAMARCK)) \
               $(addprefix test/separables/dcubic/, $(TEST_SEPARABLES_DCUBIC)) \
               $(addprefix test/separables/dcubic/, $(TEST_SEPARABLES_DCUBIC)) \
               $(addprefix test/layered_opt/, $(TEST_FILES)) \
               $(addprefix test/vff/nanopse/, $(TEST_VFF_NANOPSE)) \
               $(addprefix test/models/, $(TEST_MODELS)) \
               $(addprefix pkgconfig/, $(ENVIRONMENT_FILES)) 
            #  test/bandgap/calc \
            #  test/python test/vff/calc \
            #  test/bandgap_opt/calc \
            #  test/layered_opt/calc \
            #  test/bandgap_opt/calc 

$(top_builddir)/crystal/libcrystal.la: $(addprefix $(top_srcdir)/crystal/, $(crystal_h) )\
                                       $(addprefix $(top_srcdir)/crystal/, $(crystal_cc) ) 
	@cd $(top_builddir)/crystal; $(MAKE) libcrystal.la

$(top_builddir)/physics/libphysics.la: $(addprefix $(top_srcdir)/physics/, $(physics_h) )\
                                       $(addprefix $(top_srcdir)/physics/, $(physics_cc) ) 
	@cd $(top_builddir)/physics; $(MAKE) libphysics.la

$(top_builddir)/atat/libatat.la: $(addprefix $(top_srcdir)/atat/, $(atat_h) )\
                                 $(addprefix $(top_srcdir)/atat/, $(atat_cc) ) 
	@cd $(top_builddir)/atat; $(MAKE) libatat.la

$(top_builddir)/mpi/libmpiobject.la: $(addprefix $(top_srcdir)/mpi/, $(mpi_h) )\
                                     $(addprefix $(top_srcdir)/mpi/, $(mpi_cc) ) 
	@cd $(top_builddir)/mpi; $(MAKE) libmpiobject.la

$(top_builddir)/print/libprint.la: $(addprefix $(top_srcdir)/print/, $(print_h) )\
                                   $(addprefix $(top_srcdir)/print/, $(print_cc) ) 
	@cd $(top_builddir)/print; $(MAKE) libprint.la
		
$(top_builddir)/opt/libopt.la: $(addprefix $(top_srcdir)/opt/, $(opt_h) )\
                               $(addprefix $(top_srcdir)/opt/, $(opt_cc) ) 
	@cd $(top_builddir)/opt; $(MAKE) libopt.la
		
$(top_builddir)/python/libpython_lada.la: $(addprefix $(top_srcdir)/python/, $(python_h) )\
                                          $(addprefix $(top_srcdir)/python/, $(python_cc) ) 
	@cd $(top_builddir)/python; $(MAKE) libpython_lada.la

$(top_builddir)/opt/libpythonconvenience.la: \
     $(addprefix $(top_srcdir)/opt/, $(opt_python_convenience_h) )\
     $(addprefix $(top_srcdir)/opt/, $(opt_python_convenience_cc) ) 
	@cd $(top_builddir)/opt; $(MAKE) libpythonconvenience.la
		
$(top_builddir)/ce/libce.la: $(addprefix $(top_srcdir)/ce/, $(ce_h) )\
                             $(addprefix $(top_srcdir)/ce/, $(ce_impl_h) ) \
                             $(addprefix $(top_srcdir)/ce/, $(ce_cc) ) 
	@cd $(top_builddir)/ce; $(MAKE) libce.la
		
$(top_builddir)/vff/libvff.la: $(addprefix $(top_srcdir)/vff/, $(VFF_H) )\
                               $(addprefix $(top_srcdir)/vff/, $(VFF_CC) ) 
	@cd $(top_builddir)/vff; $(MAKE) libvff.la
		
$(top_builddir)/minimizer/libminimizer.la: $(addprefix $(top_srcdir)/minimizer/, $(MINIMIZER_H) )\
                                           $(addprefix $(top_srcdir)/minimizer/, $(MINIMIZER_CC) ) 
	@cd $(top_builddir)/minimizer; $(MAKE) libminimizer.la
		
		
$(top_builddir)/models/libmodels.la: $(addprefix $(top_srcdir)/models/, $(models_clj_h) )\
                                     $(addprefix $(top_srcdir)/models/, $(models_clj_cc) ) \
                                     $(addprefix $(top_srcdir)/models/, $(models_clj_f90) ) \
	@cd $(top_builddir)/models; $(MAKE) libmodels.la

$(top_builddir)/atomic_potentials/libpotentials.la: \
            $(addprefix $(top_srcdir)/atomic_potentials/, $(ap_h) )\
            $(addprefix $(top_srcdir)/atomic_potentials/, $(ap_cc) ) 
	@cd $(top_builddir)/atomic_potentials; $(MAKE) libpotentials.la

$(top_builddir)/pescan_interface/libescan.la: \
    $(addprefix $(top_srcdir)/pescan_interface/, $(PESCAN_H) )\
    $(addprefix $(top_srcdir)/pescan_interface/, $(PESCAN_CC) ) 
	@cd $(top_builddir)/pescan_interface; $(MAKE) libescan.la


