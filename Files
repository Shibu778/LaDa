#
#  Version: $Id$
#

ATAT_CC = findsym.cc integer.cc xtalutil.cc 
ATAT_H  = findsym.h  integer.h  xtalutil.h lambda.impl.h \
          array.h  arraylist.h   fixagg.h  fxvector.h \
	  linklist.h  machdep.h  misc.h  vectmac.h  

DARWIN_GRAPH_CC = graph/graph.cc
DARWIN_GRAPH_IMPL_H = graph/breeders.impl.h graph/comm.impl.h graph/evaluation.impl.h \
                      graph/evaluator.impl.h graph/graph.impl.h graph/objective.impl.h
DARWIN_GRAPH_H = graph/breeders.h graph/comm.h graph/evaluation.h \
                 graph/evaluator.h graph/graph.h graph/history.h \
                 graph/objective.h graph/store.h  graph/taboo.h $(DARWIN_GRAPH_IMPL_H)

DARWIN_LIB_CC = concentration.cc debug.cc topology.cc \
                operators/container.cc checkpoints/save_every.cc \
                init_outputfiles.cc
 
DARWIN_LIB_IMPL_H = darwin.impl.h  evaluation.impl.h individual.impl.h \
	            scaling.impl.h store.impl.h  fitness.impl.h taboos.impl.h \
                    objective.impl.h bitstring.impl.h gaoperators.impl.h \
                    checkpoints.impl.h minimizergenop.impl.h topology.impl.h 
DARWIN_LIB_H = concentration.h debug.h \
               breeder.h evaluation.h functors.h loadsave.h \
	       operators.h statistics.h darwin.h gencount.h store.h \
	       checkpoints.h evaluator.h individual.h objective.h \
	       taboos.h gatraits.h  bitstring.h fitness.h gaoperators.h \
	       scaling.h minimizergenop.h topology.h \
               assign_callbacks.h print_callbacks.h static_translate.h \
               $(DARWIN_LIB_IMPL_H)

DARWIN_OP_CC = operators/container.cc 
DARWIN_OP_IMPL_H = operators/factory.impl.h 
DARWIN_OP_H = operators/container.h \
              operators/callback.h operators/discriminate.h \
              operators/eogenop_adapter.h operators/factory.h \
              operators/periodic.h operators/populator_functor.h \
              operators/xmlfactory.h $(DARWIN_OP_IMPL_H)


DARWIN_CE_CC = ce.cc single_site.cc groundstates/groundstate.cc 
DARWIN_CE_IMPL_H = single_site.impl.h 
DARWIN_CE_H  = ce.h  single_site.h  groundstates/groundstate.h  $(DARWIN_CE_IMPL_H)
DARWIN_CE_DOC = $(DARWIN_CE_H) $(DARWIN_CE_CC) 

DARWIN_BG_CC = bandgap_stubs.cc two_sites.cc single_site.cc vff.cc bandgap.cc 
DARWIN_BG_IMPL_H = two_sites.impl.h  single_site.impl.h  bandgap_stubs.impl.h
DARWIN_BG_H  = bandgap_stubs.h  two_sites.h  single_site.h  vff.h  bandgap.h \
               $(DARWIN_BG_IMPL_H)
DARWIN_BG_DOC = $(DARWIN_BG_H) $(DARWIN_BG_CC) $(DARWIN_GRAPH_H) $(DARWIN_GRAPH_CC)

LIB_ALLOYLAYERS_CC = single_site.cc bandgap_stubs.cc vff.cc # electric_dipole.cc
LIB_ALLOYLAYERS_IMPL_H  = alloylayers/evaluator.impl.h  alloylayers/policies.impl.h \
                          alloylayers/factory.hpp 
LIB_ALLOYLAYERS_H  = alloylayers/evaluator.h alloylayers/object.h \
                     alloylayers/policies.h alloylayers/operators.h \
                     $(LIB_ALLOYLAYERS_IMPL_H) # electric_dipole.h 

DARWIN_LIB_DOC = $(DARWIN_LIB_H) $(DARWIN_LIB_CC) $(DARWIN_OP_H) $(DARWIN_OP_CC) \
                 $(LIB_ALLOYLAYERS_H) $(LIB_ALLOYLAYERS_CC)

DARWIN_L_CC = bandgap_stubs.cc two_sites.cc single_site.cc vff.cc molecularity.cc layered.impl.h
DARWIN_L_IMPL_H = two_sites.impl.h single_site.impl.h molecularity.impl.h \
                  layered.impl.h 
DARWIN_L_H  = bandgap_stubs.h   two_sites.h single_site.h  vff.h  molecularity.h  layered.h \
              $(DARWIN_L_IMPL_H)
DARWIN_L_DOC = $(DARWIN_L_H) $(DARWIN_L_CC) 

DARWIN_E_CC = emass_stubs.cc two_sites.cc single_site.cc vff.cc emass.cc layered.impl.h
DARWIN_E_IMPL_H = emass_stubs.impl.h  two_sites.impl.h  single_site.impl.h \
                  emass.impl.h  layered.impl.h 
DARWIN_E_H  = emass_stubs.h  two_sites.h  single_site.h  vff.h  emass.h  layered.h \
              $(DARWIN_E_IMPL_H)
DARWIN_E_DOC = $(DARWIN_E_H) $(DARWIN_E_CC) 

CRYSTAL_CC = lattice.cc structure.cc confsplit.cc layerdepth.cc
CRYSTAL_H  = lattice.h  structure.h structure.impl.h atom.h  confsplit.h layerdepth.h
CRYSTAL_DOC = $(CRYSTAL_H) $(CRYSTAL_CC) 

CE_CC     = cluster.cc harmonic.cc  polynome.cc regularization.cc fit.cc
CE_H      = cluster.h  constituent_strain.h  functional_builder.h  harmonic.h \
            polynome.h regularization.h fit.h
CE_IMPL_H = constituent_strain.impl.h  functional_builder.impl.h  harmonic.impl.h \
            cluster.impl.h regularization.impl.h fit.impl.h
CE_DOC = $(CE_H) $(CE_CC) 

LAPACK_F90 = dlae2.f   dlanst.f  dlapy2.f  dlarf.f   dlarft.f  dlascl.f \
	     dlasr.f   dlassq.f  dorg2l.f  dorgql.f  dorgtr.f  dsterf.f \
             dsytd2.f  dlaev2.f  dlansy.f  dlarfb.f  dlarfg.f  dlartg.f \
	     dlaset.f  dlasrt.f  dlatrd.f  dorg2r.f  dorgqr.f  dsteqr.f \
	     dsyev.f   dsytrd.f  lsame.f   xerbla.f  dgemm.f   ilaenv.f \
	     dscal.f   dlamch.f  dsyr2k.f  ieeeck.f  iparmq.f  dsymv.f  \
	     ddot.f    daxpy.f   dsyr2.f   dnrm2.f   dswap.f   dcopy.f  \
	     dgemv.f   dtrmv.f   dtrmm.f   dger.f   
LAPACK_CC = lapack.cc 
LAPACK_H  = lapack.h
LAPACK_DOC = $(LAPACK_H) $(LAPACK_CC) 

MPI_CC     = mpi_object.cc
MPI_H      = mpi_object.h macros.h
MPI_DOC    = $(MPI_H) $(MPI_CC)

OPT_H = ndim_iterator.h minimize_base.h polynome.h frprmn_minimizer.h \
        gsl_minimizers.h types.h function_base.h \
	va_minimizer.h fitness_function.h  function_functors.h monome.h traits.h \
        fuzzy.h atat.h debug.h va_function.h gsl_lsq.h random.h algorithms.h \
        gsl.h allsq.h cgs.h gsl_nllsq.h gsl_mins.h gsl_simplex.h \
        bpo_macros.h initial_path.h tinyxml.h modifiers.h tuple_io.h 
OPT_CC = gsl_lsq.cc random.cc gsl.cc gsl_nllsq.cc gsl_mins.cc gsl_simplex.cc \
         leave_many_out.cc initial_path.cc tinyxml.cc fortran_dirio.cc
OPT_PYTHON_CONVENIENCE_H =  convex_hull.h errors.h convex_hull.impl.h
OPT_PYTHON_CONVENIENCE_CC =  convex_hull.cc errors.cc 
OPT_F90 =  df1dim.f90  frprmn.f90  linmin.f90 leave_many_out.h fortran_dirio.h
OPT_DOC = $(OPT_H) $(OPT_CC) $(OPT_PYTHON_CONVENIENCE_CC)

FACTORY_CC =
FACTORY_H = chainconnects.h factory.h fusedfactory.h xmlkey.h
FACTORY_DOC = $(FACTORY_CC) $(FACTORY_H)

EMASS_CC = emass.cc
EMASS_H  = emass.h
EMASS_DOC = $(EMASS_H) $(EMASS_CC) 
PESCAN_F90 = momentum.f90 fortran.f90 
PESCAN_CC = interface.cc bandgap.cc dipole_elements.cc
PESCAN_H  = interface.h  bandgap.h  va.h dipole_elements.h
PESCAN_IMPL_H  = interface.localclasses.h va.impl.h
PESCAN_DOC = $(PESCAN_H) $(PESCAN_CC) $(PESCAN_F90) $(PESCAN_IMPL_H)

PHYSICS_CC = physics.cc
PHYSICS_H  = physics.h
PHYSICS_DOC = $(PHYSICS_H) $(PHYSICS_CC) 

PRINT_CC = manip.cc xmg.cc stdout.cc base.cc columns.cc
PRINT_H  = manip.h  xmg.h  stdout.h  base.h  operations.h columns.h
PRINT_DOC = $(PRINT_H) $(PRINT_CC) 

PYTHON_CE_CC = ce.cc
PYTHON_CE_H = ce.hpp ce.impl.hpp
PYTHON_H = atat.hpp atat.impl.hpp atom.hpp atom.impl.hpp structure.hpp lattice.hpp \
           xml.hpp misc.hpp convex_hull.impl.hpp errortuple.hpp
PYTHON_CC = atat.cc atom.cc structure.cc lattice.cc lada.cc physics.cc errortuple.cc
PYTHON_DOC = $(PYTHON_CC) $(PYTHON_H) $(PYTHON_CE_CC) $(PYTHON_CE_H)

SEPARABLE_CC = cefitting.cc  main.cc ce.cc
SEPARABLE_H = boolean.h cefitting.h ce.h lsq.h separable.h collapse.h \
              cecollapse.h bestof.h
SEPARABLE_IMPL_H = cefitting.impl.h separable.impl.h collapse.impl.h \
                   cecollapse.impl.h
SEPARABLE_DOC = $(SEPARABLE_CC) $(SEPARABLE_H) $(SEPARABLE_IMPL_H)
SEPARABLES_FXL_CC = prepare.cc
SEPARABLES_FXL_H = colmappings.h sepmappings.h functional.h prepare.h collapse.h methods.h \
                   mixed.h colpolicy.h mixedfunctional.h ce_as_collapse.h
SEPARABLES_FXL_IMPL_H = functional.impl.h collapse.impl.h methods.impl.h mixed.impl.h \
                        colpolicy.impl.h mixedfunctional.impl.h \
                        ce_as_collapse.impl.h
SEPARABLES_DOC = $(SEPARABLES_FXL_CC) $(SEPARABLES_FXL_H) $(SEPARABLES_FXL_IMPL_H)


VFF_FORTRAN_CC = fortran.cc
VFF_FORTRAN_H  = fortran.h
VFF_FORTRAN_DOC = $(VFF_FORTRAN_H) $(VFF_FORTRAN_CC) 
VFF_CC = atomic_center.cc atomic_functional.cc functional.cc layered.cc # pescan_perturbation.cc 
VFF_IMPL_H = va.impl.h pescan_perturbation.impl.h atomic_center.h atomic_functional.h
VFF_H  = functional.h  layered.h  va.h  pescan_perturbation.h $(VFF_IMPL_H)
VFF_DOC = $(VFF_H) $(VFF_IMPLS) $(VFF_CC) 

DOCS_H = revision.h
DOCS =  beginners  crystal  fortran  functionals  ga  \
        input  mainpage  mpi  xmltagindex gainput executables
SCRIPT_FILES = atat.pl  CE_to_ATAT_MC.pl  convert_from_atat.pl  escan_to_xml.pl\
               input_template.xml  max_revision.pl  nxnxn.pl  send_all.pl

ALL_DOCS = $(top_srcdir)/doxy.conf $(top_srcdir)/$(DOCS_H) \
           $(addprefix $(top_srcdir)/docsource/, $(DOCS)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_LIB_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_CE_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_BG_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_L_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_E_DOC)) \
           $(addprefix $(top_srcdir)/darwin/, $(DARWIN_ALLOYLAYERS_DOC)) \
           $(addprefix $(top_srcdir)/crystal/,$(CRYSTAL_DOC)) \
           $(addprefix $(top_srcdir)/ce/,$(CE_DOC)) \
           $(addprefix $(top_srcdir)/lapack/,$(LAPACK_DOC)) \
           $(addprefix $(top_srcdir)/mpi/,$(MPI_DOC)) \
           $(addprefix $(top_srcdir)/opt/,$(OPT_DOC)) \
           $(addprefix $(top_srcdir)/pescan_interface/,$(EMASS_DOC)) \
           $(addprefix $(top_srcdir)/pescan_interface/,$(PESCAN_DOC)) \
           $(addprefix $(top_srcdir)/physics/,$(PHYSICS_DOC)) \
           $(addprefix $(top_srcdir)/print/,$(PRINT_DOC)) \
           $(addprefix $(top_srcdir)/separable/,$(SEPARABLE_DOC)) \
           $(addprefix $(top_srcdir)/separable/fixedlattice/,$(SEPARABLES_DOC)) \
           $(addprefix $(top_srcdir)/vff/,$(VFF_FORTRAN_DOC)) \
           $(addprefix $(top_srcdir)/vff/,$(VFF_DOC)) \
           $(addprefix $(top_srcdir)/factory/,$(FACTORY_DOC)) 

TEST_PSEUDOS = maskr  vq.atom1  vq.atom2  vq.atom3  vq.atom4  vq.atom5 \
               vq.atom6  vq.atom7  vq.atom8  vwr.pso
TEST_FILES =  input.xml  launch.pl
TEST_LAMARCK =  input.xml  

TEST_SEPARABLES_DTETRA = LDAs.dat A1-A  CH-A2B2 gamma2-AB2 L12-AB3 \
  PI0.94v1.str.-30-yz-A1B4 PI0.94v1.str.-565-A2B7 PI0.94v1.str.82794-yz-A12B4 \
  V1-AB3 Y1-A3B Z1-AB3-yz A1-B CH-A2B2-yz gamma2-AB2-xz PI0.94v1.str.30-yz-A4B1 \
  PI0.94v1.str.69736-A12B4 PI0.94v1.str.88807-A8B8 V2-A2B2     Y1-A3B-yz Z2-A2B2 \
  alpha1-A2B D022-A3B PI0.94v1.str.313-A6B2 PI0.94v1.str.-69736-yz-A4B12 \
  PI0.94v1.str.88807-xz-A8B8 V2-A2B2-yz  Y1-AB3 Z2-A2B2-yz alpha2-AB2 D022-A3B-yz \
  input.xml PI0.94v1.str.1132-yz-A9B1  PI0.94v1.str.313-yz-A6B2 \
  PI0.94v1.str.73983-yz-A8B8 PI0.94v1.str.-8882-A4B9 W1-A3B Y1-AB3-yz \
  alpha2-AB2-yz  D022-AB3 jtypes PI0.94v1.str.-29443-A7B8 PI0.94v1.str.31-yz-A3B2 \
  PI0.94v1.str.74095-A8B8 PI0.94v1.str.88905-A8B8 W1-A3B-yz Y2-A2B2 beta1-A2B \
  D022-AB3-yz L1_0-AB PI0.94v1.str.29443-A8B7 PI0.94v1.str.359-yz-A4B4 \
  PI0.94v1.str.74095-yz-A8B8 PIs2thru8 W1-AB3 Y2-A2B2-yz beta1-A2B-yz L1_0-AB-yz \
  PI0.94v1.str.-298-yz-A1B7  PI0.94v1.str.-360-yz-A1B7 PI0.94v1.str.74260-A8B8 \
  readpi.py W1-AB3-yz Z1-A3B beta2-AB2 gamma1-A2B L1_1-AB \
  PI0.94v1.str.298-yz-A7B1 PI0.94v1.str.-4719-yz-A4B8 PI0.94v1.str.74260-yz-A8B8 \
  W2-A2B2 Z1-A3B-yz beta2-AB2-yz gamma1-A2B-xz L12-A3B PI0.94v1.str.-30-A1B4 \
  PI0.94v1.str.4719-yz-A8B4 PI0.94v1.str.-82794-A4B12 V1-A3B W2-A2B2-yz  Z1-AB3
TEST_SEPARABLES_DCUBIC = LDAs.dat \
                         A_1-AB   C11b-AB2       L6_0-AB3 \
                         A2-A     D03-A3B \
                         A2-B     D03-AB3        PIs2thru8.3B5.4B4.5B3.6B3  \
                         B11-AB   input.xml      PIs.3B5.4B4.5B3.6B3.126-A6B\
                         B2-AB            PIs.3B5.4B4.5B3.6B3.24-A4B \
                         B32-AB   PIs.3B5.4B4.5B3.6B3.24-AB4 \
                         C11b-A2B L6_0-A3B       PIs.3B5.4B4.5B3.6B3.27-A4B \
                         PIs.3B5.4B4.5B3.6B3.27-AB4    PIs.bcc.own.109-A4B3   \
                         PIs.3B5.4B4.5B3.6B3.288-A7B   PIs.bcc.own.12305-A9B5 \
                         PIs.3B5.4B4.5B3.6B3.54726-A7B PIs.bcc.own.128-A5B2   \
                         PIs.3B5.4B4.5B3.6B3.7651-A4B9 PIs.bcc.own.133-A3B4   \
                         PIs.bcc.own.102-A6B           PIs.bcc.own.133-A4B3   \
                         PIs.bcc.own.106-A5B2          PIs.bcc.own.247-A7B    \
                         PIs.bcc.own.109-A3B4          PIs.bcc.own.247-AB7    \
                         PIs.bcc.own.254-A5B3  PIs.bcc.own.51204-A3B  \
                         PIs.bcc.own.26-A2B3   PIs.bcc.own.51204-AB3  \
                         PIs.bcc.own.26-A3B2   PIs.bcc.own.5386-A10B2 \
                         PIs.bcc.own.29-A4B    PIs.bcc.own.90757-A3B  \
                         PIs.bcc.own.31-A3B2   PIs.bcc.own.980-A3B2   \
                         PIs.bcc.own.511-A8B   PIs.step_3.89781-A3B   \
                         PIs.bcc.own.511-AB8   PIs.step_3.89781-AB3   \
                         PIs.step_3.89843-AB  SL_110_A3B-AB3\
                         SL_100_A3B-A3B       SL_111_A2B-A2B\
                         SL_100_A3B-AB3       SL_111_A2B-AB2\
                         SL_110_A2B2-AB       SL_310_A2B2-AB\
                         SL_110_A2B-A2B       SL_310_A3B-A3B\
                         SL_110_A2B-AB2       SL_310_A3B-AB3\
                         SL_110_A3B-A3B
TEST_VFF = launch.pl  launch.sh  quaternary.xml  ternary.xml
TEST_VFF_NANOPSE = position.GaSb  scanparam.GaSb  vff.in  vffparam.GaSb
ENVIRONMENT_FILES = env

EXTRA_FILES =  $(addprefix docsource/, $(DOCS)) \
               $(addprefix scripts/, $(SCRIPT_FILES)) \
               $(addprefix test/pseudos/, $(TEST_PSEUDOS)) \
               $(addprefix test/bandgap/, $(TEST_FILES)) \
               $(addprefix test/bandgap_opt/, $(TEST_FILES)) \
               $(addprefix test/ce_opt/, $(TEST_FILES)) \
               $(addprefix test/lamarck/, $(TEST_LAMARCK)) \
               $(addprefix test/separables/dcubic/, $(TEST_SEPARABLES_DCUBIC)) \
               $(addprefix test/separables/dcubic/, $(TEST_SEPARABLES_DCUBIC)) \
               $(addprefix test/layered_opt/, $(TEST_FILES)) \
               $(addprefix test/vff/nanopse/, $(TEST_VFF_NANOPSE)) \
               $(addprefix pkgconfig/, $(ENVIRONMENT_FILES)) 
            #  test/bandgap/calc \
            #  test/python test/vff/calc \
            #  test/bandgap_opt/calc \
            #  test/layered_opt/calc \
            #  test/bandgap_opt/calc 
